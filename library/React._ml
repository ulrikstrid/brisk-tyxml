module RemoteAction = Brisk_reconciler.RemoteAction

let onStale = RemoteAction.create ()

let () =
  Brisk_reconciler.addStaleTreeHandler
    (fun () -> RemoteAction.send ~action:() onStale)
    ()

let render _application = print_endline "This is no-op on native"

let renderToString application =
  let rendered :
      ('a Tyxml.Html.elt, 'b Tyxml.Html.elt) Brisk_reconciler.RenderedElement.t
      ref =
    ref
      (Brisk_reconciler.RenderedElement.render
         {
           node = Tyxml.Html.body [];
           insertNode = BriskXml.Component.Xml.insertNode;
           deleteNode = BriskXml.Component.Xml.deleteNode;
           moveNode = BriskXml.Component.Xml.moveNode;
         }
         application)
  in
  let hostView =
    Brisk_reconciler.RenderedElement.executeHostViewUpdates !rendered
  in
  Format.asprintf "%a" (Tyxml.Html.pp ())
    (Tyxml.Html.html
       (Tyxml.Html.head (Tyxml.Html.title (Tyxml.Html.txt "title")) [])
       hostView)
